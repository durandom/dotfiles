# improve colors
set -g default-terminal 'screen-256color'
# set -g default-command 'reattach-to-user-namespace $SHELL --login'

# act like vim
# setw -g mode-keys vi
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R
bind -n C-Left select-pane -L
bind -n C-Down select-pane -D
bind -n C-Up select-pane -U
bind -n C-Right select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

set-option -g status-keys "emacs"

unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# prefix -> back-one-character
#bind-key C-b send-prefix
# prefix-2 -> forward-incremental-history-search
#bind-key C-s send-prefix -2

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Binding to toggle synchronize panes
is_synched='[[ $(tmux show-window-options -v synchronize-panes) == "on" ]]'
bind-key S if-shell "$is_synched" "set-window-option synchronize-panes off" "set-window-option synchronize-panes on"

is_mouse='[[ $(tmux show-options -v mouse) == "on" ]]'
bind-key M if-shell "$is_mouse" "set-option mouse off; display 'Mouse OFF'" "set-option mouse on; display 'Mouse ON'"

# more intuitive keybindings for splitting
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# The base index for windows and panes to 1 instead of the default 0.
# # Now prefix 1 is the first window instead of a prefix 0 being the first.
set -g base-index 1
setw -g pane-base-index 1 # not recognized by my tmux

# bind -n S-Left resize-pane -L 2
# bind -n S-Right resize-pane -R 2
# bind -n S-Down resize-pane -D 1
# bind -n S-Up resize-pane -U 1

# bind -n C-Left resize-pane -L 10
# bind -n C-Right resize-pane -R 10
# bind -n C-Down resize-pane -D 5
# bind -n C-Up resize-pane -U 5

# mouse tmux 2.0
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on
#setw -g mode-mouse on
# mouse tmux 2.1
set -g mouse on
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M

# copy paste stuff
# bind -n S-C-v run "tmux set-buffer \"$(xclip -o -selection c)\"; tmux paste-buffer"
# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "xclip -i -selection clipboard"

# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "xclip -i -selection clipboard"
#bind C-c run "tmux save-buffer - | xclip -selection clipboard &>/dev/null"


# --
# execute fast helpers
#bind h split-window -h "htop"
# vim in scratch
# bind e split-window -h -c ~/src/scratch vim
bind h split-window -h "cd ~/src/scratch; vim -c FzfFiles"
# special cmds
bind C-c split-window -v 'cd ~/src/scratch/cheatsheets ; /usr/local/bin/vim . ; for i in *rb ; do cheatset generate $i ; done'


# Easily swap a pane (targeted by pane number) with the current pane
bind s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Make C-j display a selectable list of sessions
bind C-j choose-tree
#bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# breakout new session
bind C-b send-keys 'tat && exit' 'C-m'

# Dismiss current pane to background window
bind b break-pane -d

# Status bar
set -g status-justify left
set -g status-bg default
set -g status-fg colour12
set -g status-interval 2

set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style fg=colour81,bg=colour238,bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-style dim
setw -g window-status-style fg=colour138,bg=colour235,none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style fg=colour255,bg=colour1,bold


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# Enter Copy Mode <C-y>
# bind-key -n C-y copy-mode
# dragging starts copy mode
bind-key -n MouseDrag1Pane copy-mode -M
bind-key -n DoubleClick1Pane copy-mode \; send-keys -X select-word
bind-key -n TripleClick1Pane copy-mode \; send-keys -X select-line
bind-key -T copy-mode    MouseDrag1Pane send-keys -X begin-selection
bind-key -T copy-mode-vi MouseDrag1Pane send-keys -X begin-selection
unbind MouseDragEnd1Pane
unbind -T copy-mode MouseDragEnd1Pane
unbind -T copy-mode-vi MouseDragEnd1Pane

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
